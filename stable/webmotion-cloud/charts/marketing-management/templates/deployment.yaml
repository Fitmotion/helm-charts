apiVersion: apps/v1
kind: Deployment
metadata:
  name: mms-{{.Values.global.deploymentName}}
  labels:
    app: mms-{{.Values.global.deploymentName}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mms-{{.Values.global.deploymentName}}
  template:
    metadata:
      labels:
        app: mms-{{.Values.global.deploymentName}}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      containers:
      - name: mms-{{.Values.global.deploymentName}}
        image: "{{.Values.global.containerRegistry.server}}/marketing-management:{{.Values.global.version}}"
        ports:
        - name: http
          containerPort: {{.Values.global.services.mms.port}}
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/webmotion/config
          name: config-volume
        - mountPath: /tmp/webmotion/keys
          name: secret-volume
        env:
        - name: CONFIG_PATH
          value: /tmp/webmotion/config/config.json
        - name: ENVIRONMENT
          value: {{.Values.global.environment}}
        - name: TZ
          value: Europe/Berlin
        - name: VERSION
          value: {{.Values.global.version}}
        livenessProbe:
          httpGet:
            path: /health
            port: {{.Values.global.services.mms.port}}
          initialDelaySeconds: 3
          periodSeconds: 30
        resources:
        {{- if ne .Values.global.environment "prod" }}
          requests:
            memory: "60Mi"
            cpu: "5m"
          limits:
            memory: "2Gi"
            cpu: "2"
        {{- else }}
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "4Gi"
            cpu: "2"
        {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: mms-{{.Values.global.deploymentName}}
      - name: secret-volume
        secret:
          secretName: account
